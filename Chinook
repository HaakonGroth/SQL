This database has 11 tables 
to understand the database
The employees table stores employees data such as employee id, last name, first name, etc. It also has a field named ReportsTo to specify who reports to whom.
The customers table stores customers data. The line between employees.Employeeid and customers.SupportRepID shows how the two tables are related (ie, how you would JOIN them).
The invoices table stores invoice header data (Customer ID, Billing Address, etc) and the invoice_items table stores the invoice line items data (Unit Price, Quantity).
The artists table stores artists data.
The albums table stores data about a list of tracks. Each album belongs to one artist. However, one artist may have multiple albums.
The media_types table stores media types such as MPEG audio and AAC audio files.
The genres table stores music types such as rock, jazz, metal, etc.
The tracks table stores the data of songs. Each track belongs to one album.
The playlists table store data about playlists. Each playlist contains a list of tracks. Each track may belong to multiple playlists. The relationship between the playlists table and tracks table is many-to-many. The playlist_track table is used to reflect this relationship.

These are my questions and answers in SQLiteStudio
-- 1. Show Customers (their full names, customer ID, and country) who are not in the US. (Hint: != or <> can be used to say "is not equal to").
Select customers.FirstName, customers.LastName, customers.CustomerId, customers.Country
From chinook.customers
where customers.Country != 'USA';

-- 2. Show only the Customers from Brazil.
Select FirstName, LastName, Country
From chinook.customers
where Country = 'Brazil';

-- 3. Find the Invoices of customers who are from Brazil. 
-- The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.
Select customers.FirstName, customers.LastName, invoices.InvoiceId, invoices.InvoiceDate, invoices.BillingCountry
From chinook.customers
Join chinook.invoices
on customers.CustomerId = invoices.CustomerId
Where customers.Country = 'Brazil';

-- 4. Show the Employees who are Sales Agents
Select employees.FirstName, employees.LastName, employees.Title
From chinook.employees
Where employees.Title like '%Agent';

-- 5. Find a unique/distinct list of billing countries from the Invoice table.
Select distinct(invoices.BillingCountry)
From chinook.invoices;

-- 6. Provide a query that shows the invoices associated with each sales agent. 
-- The resulting table should include the Sales Agent's full name.
Select employees.FirstName, employees.LastName, invoices.InvoiceId
From chinook.employees 
Join chinook.customers On employees.EmployeeId = customers.SupportRepId
Join chinook.invoices On customers.CustomerId = invoices.CustomerId;

-- 7. Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
Select invoices.InvoiceId, invoices.Total, customers.FirstName, customers.LastName, employees.FirstName, employees.LastName
From chinook.customers
Join chinook.invoices on customers.CustomerId = invoices.CustomerId
Join chinook.employees on customers.SupportRepId = employees.EmployeeId;

-- 8. How many Invoices were there in 2009?
Select sum(invoices.InvoiceId), invoices.InvoiceDate
From chinook.invoices
where InvoiceDate like '%2009%';

-- 9. What are the total sales for 2009?
Select sum(invoices.Total)
From chinook.invoices
where invoices.InvoiceDate like '%2009%';

-- 10.Write a query that includes the purchased track name with each invoice line ID.
Select tracks.Name, invoice_items.InvoiceLineId lineID
From chinook.tracks
Inner Join chinook.invoice_items on tracks.TrackId = invoice_items.TrackId;

-- 11. Write a query that includes the purchased track name AND artist name with each invoice line ID.
Select tracks.Name, artists.Name, invoice_items.InvoiceLineId
From chinook.tracks
Join chinook.invoice_items on tracks.TrackId = invoice_items.TrackId
Join chinook.albums on tracks.AlbumId = albums.AlbumId
Join chinook.artists on albums.ArtistId = artists.ArtistId;

-- 12. Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.
Select tracks.Name, albums.Title Album, media_types.Name mediaType, genres.Name genres
From chinook.tracks
Join chinook.albums on tracks.AlbumId = albums.AlbumId
Join chinook.media_types on tracks.MediaTypeId = media_types.MediaTypeId
Join chinook.genres on tracks.GenreId = genres.GenreId;

-- 13. Show the total sales made by each sales agent.
Select employees.FirstName, employees.LastName, sum(invoices.Total) totalSales
From chinook.employees
Join chinook.customers
     on employees.EmployeeId = customers.SupportRepId
Join chinook.invoices
     on customers.CustomerId = invoices.CustomerId
 Group by employees.EmployeeId, employees.FirstName, employees.LastName
 order by totalSales;
 
-- 14. Which sales agent made the most dollars in sales in 2009?
Select employees.FirstName, employees.LastName, sum(invoices.Total) totalSales
From chinook.employees
Join chinook.customers
     on employees.EmployeeId = customers.SupportRepId
Join chinook.invoices
     on customers.CustomerId = invoices.CustomerId
 Where invoices.InvoiceDate like '%2009%'
 Group by employees.EmployeeId, employees.FirstName, employees.LastName
 order by totalSales;
 
-- 15. What country have to the most orders?
Select customers.Country, count(invoices.Total) TotalSales
From chinook.customers
Join chinook.invoices on customers.CustomerId = invoices.InvoiceId
Group By customers.Country
Order By TotalSales desc;

-- 16. What is the most popular artists in the USA?
SELECT 
    artists.Name AS artist_name,
    COUNT(*) AS purchase_count
FROM invoices
JOIN customers 
    ON invoices.CustomerId = customers.CustomerId
JOIN invoice_items 
    ON invoices.InvoiceId = invoice_items.InvoiceId
JOIN tracks 
    ON invoice_items.TrackId = tracks.TrackId
JOIN albums 
    ON tracks.AlbumId = albums.AlbumId
JOIN artists 
    ON albums.ArtistId = artists.ArtistId
WHERE customers.Country = 'USA'
GROUP BY artists.ArtistId, artists.Name
ORDER BY purchase_count DESC
LIMIT 1;

-- 17. What is the top-selling album of all time?
SELECT 
    albums.Title AS album_title,
    artists.Name AS artist_name,
    SUM(invoice_items.UnitPrice * invoice_items.Quantity) AS total_sales
FROM invoice_items
JOIN tracks 
    ON invoice_items.TrackId = tracks.TrackId
JOIN albums 
    ON tracks.AlbumId = albums.AlbumId
JOIN artists 
    ON albums.ArtistId = artists.ArtistId
GROUP BY albums.AlbumId, albums.Title, artists.Name
ORDER BY total_sales DESC
LIMIT 1;
